#!/bin/bash
# Instala√ß√£o apenas dos pacotes Python (sem sudo)

echo "=== Instala√ß√£o Python-only - OCR Hybrid ==="
echo "Este script instala apenas os pacotes Python necess√°rios"
echo "Assume que Tesseract j√° est√° instalado no sistema"
echo ""

# Verificar se Python est√° dispon√≠vel
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 n√£o encontrado. Instale primeiro:"
    echo "   sudo apt install python3"
    exit 1
fi

echo "üêç Python encontrado: $(python3 --version)"

# Verificar se pip est√° dispon√≠vel
if ! python3 -m pip --version &> /dev/null; then
    echo "‚ùå pip n√£o est√° dispon√≠vel. Instalando via get-pip.py..."
    
    # Baixar e instalar pip sem sudo
    curl -sS https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
    python3 /tmp/get-pip.py --user
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ pip instalado localmente"
        # Adicionar pip ao PATH se necess√°rio
        export PATH="$HOME/.local/bin:$PATH"
    else
        echo "‚ùå Falha ao instalar pip"
        echo "üí° Tente manualmente: sudo apt install python3-pip"
        exit 1
    fi
fi

echo "üì¶ pip encontrado: $(python3 -m pip --version)"

# Atualizar pip
echo ""
echo "üîÑ Atualizando pip..."
python3 -m pip install --upgrade pip --user

# Lista de pacotes Python necess√°rios
PACKAGES=(
    "pytesseract"
    "pdf2image" 
    "pillow"
    "PyMuPDF"
    "requests"
    "PyPDF2"
)

echo ""
echo "üêç Instalando pacotes Python..."

FAILED_PACKAGES=()

for package in "${PACKAGES[@]}"; do
    echo ""
    echo "üì¶ Instalando $package..."
    
    # Verificar se j√° est√° instalado
    if python3 -c "import $(echo $package | tr 'A-Z' 'a-z' | sed 's/pymupdf/fitz/')" 2>/dev/null; then
        echo "‚úÖ $package j√° est√° instalado"
        continue
    fi
    
    # Instalar com diferentes estrat√©gias
    if python3 -m pip install --user "$package"; then
        echo "‚úÖ $package instalado com sucesso"
    elif python3 -m pip install --user --upgrade "$package"; then
        echo "‚úÖ $package atualizado com sucesso"
    elif python3 -m pip install --user --no-cache-dir "$package"; then
        echo "‚úÖ $package instalado (sem cache)"
    else
        echo "‚ùå Falha ao instalar $package"
        FAILED_PACKAGES+=("$package")
    fi
done

echo ""
echo "‚úÖ Verificando instala√ß√µes..."

# Verificar cada pacote
echo "üêç Testando importa√ß√µes..."
python3 -c "
import sys
success_count = 0
total_packages = 6

packages_map = {
    'pytesseract': 'pytesseract',
    'pdf2image': 'pdf2image', 
    'PIL': 'pillow',
    'fitz': 'PyMuPDF',
    'requests': 'requests',
    'PyPDF2': 'PyPDF2'
}

for import_name, package_name in packages_map.items():
    try:
        __import__(import_name)
        print(f'‚úÖ {package_name} ({import_name})')
        success_count += 1
    except ImportError as e:
        print(f'‚ùå {package_name} ({import_name}) - {e}')

print(f'\\nüìä Resultado: {success_count}/{total_packages} pacotes funcionando')

if success_count >= 4:
    print('üéâ Instala√ß√£o suficiente para funcionamento b√°sico!')
    sys.exit(0)
elif success_count >= 2:
    print('‚ö† Instala√ß√£o parcial - alguns recursos podem n√£o funcionar')
    sys.exit(1)
else:
    print('‚ùå Instala√ß√£o insuficiente')
    sys.exit(2)
"

IMPORT_RESULT=$?

echo ""

# Testar funcionalidade b√°sica se poss√≠vel
if [ $IMPORT_RESULT -eq 0 ]; then
    echo "üß™ Testando funcionalidade b√°sica..."
    
    python3 -c "
try:
    from PIL import Image, ImageDraw
    import pytesseract
    
    print('‚úÖ PIL e pytesseract dispon√≠veis')
    
    # Criar imagem simples
    img = Image.new('RGB', (200, 50), color='white')
    draw = ImageDraw.Draw(img)
    draw.text((10, 15), 'Test 123', fill='black')
    
    print('‚úÖ Cria√ß√£o de imagem funcionando')
    
    # Testar OCR se Tesseract estiver dispon√≠vel
    try:
        texto = pytesseract.image_to_string(img)
        print(f'‚úÖ OCR b√°sico funcionando: \"{texto.strip()}\"')
    except Exception as e:
        print(f'‚ö† OCR com problemas: {e}')
        print('üí° Tesseract pode n√£o estar instalado no sistema')
    
except Exception as e:
    print(f'‚ùå Erro no teste: {e}')
"
fi

echo ""
echo "=== INSTALA√á√ÉO PYTHON CONCLU√çDA ==="
echo ""

if [ ${#FAILED_PACKAGES[@]} -eq 0 ]; then
    echo "üéâ SUCESSO! Todos os pacotes Python foram instalados"
elif [ ${#FAILED_PACKAGES[@]} -lt 3 ]; then
    echo "‚ö† PARCIALMENTE COMPLETO"
    echo "‚ùå Pacotes com problemas: ${FAILED_PACKAGES[*]}"
    echo "üí° Reinstale manualmente: python3 -m pip install --user ${FAILED_PACKAGES[*]}"
else
    echo "‚ùå MUITOS PROBLEMAS na instala√ß√£o"
    echo "‚ùå Pacotes com falha: ${FAILED_PACKAGES[*]}"
fi

echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo ""
echo "1. üîß Para instalar Tesseract OCR (se necess√°rio):"
echo "   sudo apt install tesseract-ocr tesseract-ocr-por poppler-utils"
echo ""
echo "2. üß™ Para testar o sistema completo:"
echo "   python3 test_hybrid_setup.py"
echo ""
echo "3. üöÄ Para executar o OCR Hybrid:"
echo "   python3 OCR_Enhanced_Hybrid_v1.py"
echo ""
echo "üí° RESOLU√á√ÉO DE PROBLEMAS:"
echo "- Se imports falharem, reinicie o terminal"
echo "- Verifique PATH: echo \$PATH"
echo "- For√ßa reinstala√ß√£o: python3 -m pip install --user --force-reinstall <pacote>"
echo "- Limpar cache: python3 -m pip cache purge"
echo ""